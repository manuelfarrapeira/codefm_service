name: Deploy PRE

permissions:
  pull-requests: write
  issues: write

on:
  issue_comment:
    types: [ created ]

jobs:
  deploy-pre:
    if: startsWith(github.event.comment.body, 'deploy-pre')
    runs-on: ubuntu-latest
    steps:
      - name: Parse command and get branch
        id: parse_command
        run: |
          COMMENT="${{ github.event.comment.body }}"
          if [[ "$COMMENT" =~ ^deploy-pre[[:space:]]+([^[:space:]]+) ]]; then
            BRANCH="${BASH_REMATCH[1]}"
            echo "branch=$BRANCH" >> $GITHUB_OUTPUT
            echo "source=manual" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.issue.pull_request }}" != "" ]]; then
            PR_URL="${{ github.event.issue.pull_request.url }}"
            BRANCH=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" $PR_URL | jq -r .head.ref)
            echo "branch=$BRANCH" >> $GITHUB_OUTPUT
            echo "source=pr" >> $GITHUB_OUTPUT
          else
            echo "branch=master" >> $GITHUB_OUTPUT
            echo "source=issue" >> $GITHUB_OUTPUT
          fi

      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.parse_command.outputs.branch }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push PRE image
        run: |
          docker compose -f docker-compose-pre.yml build
          docker push ${{ secrets.DOCKERHUB_USER }}/codefm-pre:latest
        env:
          INFISICAL_TOKEN: ${{ secrets.INFISICAL_TOKEN }}

      - name: Create .env file
        run: echo "INFISICAL_TOKEN=${{ secrets.INFISICAL_TOKEN }}" > .env

      - name: Copy docker-compose-pre.yml
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SYNOLOGY_HOST }}
          username: ${{ secrets.SYNOLOGY_USER }}
          password: ${{ secrets.SYNOLOGY_PASS }}
          port: 33
          source: "docker-compose-pre.yml"
          target: "~/codefm-pre"

      - name: Copy .env
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SYNOLOGY_HOST }}
          username: ${{ secrets.SYNOLOGY_USER }}
          password: ${{ secrets.SYNOLOGY_PASS }}
          port: 33
          source: ".env"
          target: "~/codefm-pre"

      - name: Create logs folder on Synology
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SYNOLOGY_HOST }}
          username: ${{ secrets.SYNOLOGY_USER }}
          password: ${{ secrets.SYNOLOGY_PASS }}
          port: 33
          script: mkdir -p ~/codefm-pre/logs

      - name: Deploy PRE via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SYNOLOGY_HOST }}
          username: ${{ secrets.SYNOLOGY_USER }}
          password: ${{ secrets.SYNOLOGY_PASS }}
          port: 33
          script: |
            export PATH=$PATH:/usr/local/bin
            cd ~/codefm-pre
            echo "Desplegando con perfil PRE"
            echo "${{ secrets.SYNOLOGY_PASS }}" | sudo -S /usr/local/bin/docker-compose -f docker-compose-pre.yml down --rmi all
            echo "${{ secrets.SYNOLOGY_PASS }}" | sudo -S /usr/local/bin/docker-compose -f docker-compose-pre.yml pull
            echo "${{ secrets.SYNOLOGY_PASS }}" | sudo -S /usr/local/bin/docker-compose -f docker-compose-pre.yml up -d
            echo "Variables de entorno:"
            cat .env

      - name: Comment if deployment was successful
        if: success()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch = '${{ steps.parse_command.outputs.branch }}';
            const source = '${{ steps.parse_command.outputs.source }}';
            let message = `✅ Deployment PRE completed successfully from branch: **${branch}**`;
            if (source === 'manual') {
              message += ' (manually specified)';
            }
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: message
            });

      - name: Comment if deployment failed
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch = '${{ steps.parse_command.outputs.branch }}';
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: `❌ Error en el despliegue PRE desde la rama: **${branch}**`
            });