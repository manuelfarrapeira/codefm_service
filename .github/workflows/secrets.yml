name: Detect Secrets

on:
  push:
    branches: [ main, develop, feature/** ]
  pull_request:
    branches: [ main, develop, feature/** ]

jobs:
  gitleaks:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Gitleaks
        run: |
          wget -qO- https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-linux-amd64.tar.gz | tar xz
          sudo mv gitleaks /usr/local/bin/

      - name: Run Gitleaks to detect secrets
        run: |
          gitleaks detect --source . --report-format sarif --report-path gitleaks.sarif || true

      - name: Comment Gitleaks result
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let body;
            try {
              const report = fs.readFileSync('gitleaks.sarif', 'utf8');
              body = report.length > 10000 ? 'The report is too large to display.' : `\`\`\`json\n${report}\n\`\`\``;
            } catch (e) {
              body = 'No Gitleaks report found.';
            }
            if (context.eventName === 'pull_request') {
              github.rest.issues.createComment({
                issue_number: context.payload.pull_request.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `ðŸ”’ **Gitleaks scan result:**\n${body}`
              });
            } else if (context.eventName === 'push') {
              github.rest.repos.createCommitComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: context.sha,
                body: `ðŸ”’ **Gitleaks scan result:**\n${body}`
              });
            }