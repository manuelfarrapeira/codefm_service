name: Detect Secrets

on:
  push:
    branches:
      - '**'
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Gitleaks to detect secrets
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --redact --report-format sarif --report-path results.sarif --no-git -v || true

      - name: Comentar hallazgos de Gitleaks
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let findings = [];
            try {
              const sarif = JSON.parse(fs.readFileSync('results.sarif', 'utf8'));
              if (sarif.runs && sarif.runs[0] && sarif.runs[0].results) {
                findings = sarif.runs[0].results.map(f => {
                  const rule = f.ruleId || 'desconocida';
                  const file = f.locations?.[0]?.physicalLocation?.artifactLocation?.uri || 'desconocido';
                  const line = f.locations?.[0]?.physicalLocation?.region?.startLine || 'desconocida';
                  return `- **Regla:** ${rule}\n  **Archivo:** ${file}\n  **LÃ­nea:** ${line}`;
                });
              }
            } catch (e) {
              findings = ['No se encontrÃ³ el reporte de Gitleaks o fallÃ³ el parseo.'];
            }
            const body = findings.length
              ? `ðŸ”’ **Hallazgos de Gitleaks:**\n\n${findings.join('\n\n')}`
              : 'âœ… No se detectaron secretos con Gitleaks.';
            if (context.eventName === 'pull_request') {
              github.rest.issues.createComment({
                issue_number: context.payload.pull_request.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body
              });
            } else if (context.eventName === 'push') {
              github.rest.repos.createCommitComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: context.sha,
                body
              });
            }