name: Deploy to Synology Container Manager

on:
  issues:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Validate trigger
        run: |
          if [[ "${{ github.event_name }}" == "issues" ]]; then
            [[ "${{ github.event.issue.title }}" == deploy\ * ]] || exit 1
          else
            [[ "${{ github.event.comment.body }}" == deploy\ * ]] || exit 1
          fi

      - name: Extract branch to deploy
        id: branch
        run: |
          if [[ "${{ github.event_name }}" == "issues" ]]; then
            BRANCH=$(echo "${{ github.event.issue.title }}" | awk '{print $2}')
          else
            BRANCH=$(echo "${{ github.event.comment.body }}" | awk '{print $2}')
          fi
          if [[ -z "$BRANCH" || "$BRANCH" == "" ]]; then
            BRANCH="${{ github.head_ref || github.ref_name }}"
          fi
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      - name: Checkout indicated branch
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.branch.outputs.branch }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image to Docker Hub
        run: |
          docker compose build --build-arg INFISICAL_TOKEN=${{ secrets.INFISICAL_TOKEN }}
          docker push ${{ secrets.DOCKERHUB_USER }}/codefm:latest

      - name: Copy docker-compose.yml to Synology
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SYNOLOGY_HOST }}
          username: ${{ secrets.SYNOLOGY_USER }}
          password: ${{ secrets.SYNOLOGY_PASS }}
          source: "docker-compose.yml"
          target: "~/codefm"

      - name: Create logs folder on Synology
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SYNOLOGY_HOST }}
          username: ${{ secrets.SYNOLOGY_USER }}
          password: ${{ secrets.SYNOLOGY_PASS }}
          script: mkdir -p ~/codefm/logs

      - name: Deploy on Synology via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SYNOLOGY_HOST }}
          username: ${{ secrets.SYNOLOGY_USER }}
          password: ${{ secrets.SYNOLOGY_PASS }}
          port: 22
          script: |
            cd ~/codefm
            echo "${{ secrets.SYNOLOGY_PASS }}" | sudo -S /usr/local/bin/docker-compose pull
            echo "${{ secrets.SYNOLOGY_PASS }}" | sudo -S /usr/local/bin/docker-compose up -d --remove-orphans          

      - name: Clean up unused images on Synology
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SYNOLOGY_HOST }}
          username: ${{ secrets.SYNOLOGY_USER }}
          password: ${{ secrets.SYNOLOGY_PASS }}
          port: 22
          script: |
            echo "${{ secrets.SYNOLOGY_PASS }}" | sudo -S /usr/local/bin/docker image prune -f

      - name: Comment result in the issue
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = context.payload.issue ? context.payload.issue.number : context.payload.issue ? context.payload.issue.number : null;
            if (issue_number) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number,
                body: `âœ… Deployment executed. Check the Actions tab for more details.`
              });
            }