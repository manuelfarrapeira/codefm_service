name: Bump version and PR to develop

on:
  pull_request:
    types: [ closed ]
    branches:
      - master

permissions:
  contents: write
  pull-requests: write

jobs:
  bump-and-pr:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v4
        with:
          ref: master
          fetch-depth: 0

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create temp branch
        run: |
          BRANCH=synchronize_develop-$(date +%s)
          git checkout -b $BRANCH
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV

      - name: Bump version based on label
        run: |
          LABELS="${{ toJson(github.event.pull_request.labels) }}"
          if echo "$LABELS" | grep -q 'version/hotfix'; then
            echo "Hotfix detected, no version bump."
            echo "SKIP_BUMP=true" >> $GITHUB_ENV
          elif echo "$LABELS" | grep -q 'version/major'; then
            mvn build-helper:parse-version versions:set \
              -DnewVersion=\${parsedVersion.majorVersion+1}.0.0 \
              -DgenerateBackupPoms=false -DprocessAllModules=true
          elif echo "$LABELS" | grep -q 'version/current'; then
            mvn build-helper:parse-version versions:set \
              -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion+1}.0 \
              -DgenerateBackupPoms=false -DprocessAllModules=true
          elif echo "$LABELS" | grep -q 'version/minor'; then
            mvn build-helper:parse-version versions:set \
              -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.incrementalVersion+1} \
              -DgenerateBackupPoms=false -DprocessAllModules=true
          else
            echo "No version label found, skipping."
            exit 1
          fi
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "BASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set version to SNAPSHOT
        if: env.SKIP_BUMP != 'true'
        run: |
          mvn versions:set -DnewVersion=${BASE_VERSION}-SNAPSHOT -DgenerateBackupPoms=false -DprocessAllModules=true
          git add .
          git commit -m "chore: bump version and set to ${BASE_VERSION}-SNAPSHOT" || echo "No changes to commit"

      - name: Push temp branch
        run: |
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} $BRANCH
          sleep 100

      - name: Create PR to develop
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: develop
          branch: ${{ env.BRANCH }}
          title: "Bump version and set to SNAPSHOT"
          body: "Automatic version bump from master and set to SNAPSHOT for develop"