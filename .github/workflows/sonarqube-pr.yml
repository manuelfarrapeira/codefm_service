name: SonarQube PR Analysis

on:
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  sonarqube:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Ejecutar tests y generar cobertura
        run: mvn -B clean verify jacoco:report

      - name: SonarQube Scan (multi-módulo)
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -Dsonar.login=$SONAR_TOKEN -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.projectKey=org.web:codeFm -Dsonar.branch.name=${GITHUB_HEAD_REF} verify sonar:sonar

      - name: Buscar report-task.txt
        id: find_report
        run: |
          FILE=$(find . -type f -name report-task.txt | head -n 1)
          if [ -z "$FILE" ]; then
            echo "No se encontró report-task.txt"
            exit 1
          fi
          echo "Ruta encontrada: $FILE"
          echo "file=$FILE" >> $GITHUB_OUTPUT

      - name: SonarQube Quality Gate Check
        uses: sonarsource/sonarqube-quality-gate-action@v1
        with:
          scanMetadataReportFile: ./target/sonar/report-task.txt
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}